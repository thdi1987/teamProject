<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="memberDao">
      <insert id = "insertNormal">
      	insert into MEMBER(MID, MNAME, MPASSWORD, MEMAIL, MADDRESS, MPHONE, MBCODE, MACCOUNT, MDIVISION, MJOINDATE, MEMAILCHECK)
      		values( #{MID}, #{MNAME}, #{MPASSWORD}, #{MEMAIL}, #{MADDRESS}, #{MPHONE}, #{MBCODE}, #{MACCOUNT}, 'A1', SYSDATE, #{MEMAILCHECK})
      </insert>
      
      <insert id = "insertParcelOut">
      	insert into MEMBER( MID, MNAME, MPASSWORD, MEMAIL, MADDRESS, MPHONE, MBCODE, MACCOUNT, MREGISTRATION, MDIVISION, MJOINDATE, MEMAILCHECK)
      		values( #{MID}, #{MNAME}, #{MPASSWORD}, #{MEMAIL}, #{MADDRESS}, #{MPHONE}, #{MBCODE}, #{MACCOUNT}, #{MREGISTRATION}, 'B1', SYSDATE, #{MEMAILCHECK})
      </insert>
      
      <update id="updateEmailAuthentication">
      	update MEMBER set MEMAILCHECK = 'Y' where MEMAILCHECK = #{MEMAILCHECK}
      </update>
      
      <select id= "selectById" resultType="MemberVO" parameterType="String"> <!-- resultType="MemberVO" parameterType="String" -->
      	select MID, MNAME, MEMAIL, MDIVISION, MEMAILCHECK from MEMBER where MID = #{id}
      </select>
      
      <select id="idCheck" resultType="int">
      	select count(*) from MEMBER where MID = #{MID}
      </select>
      
      <select id ="regCheck" resultType="int">
      	select count(*) from REGISTRATION_DB where RNAME = #{MNAME} and RREGISTRATION = #{MREGISTRATION}
      </select>      
     
	  <select id="emailChk" resultType="int">
      	select count(*) from MEMBER where MEMAILCHECK = #{MEMAILCHECK}
      </select>
      
      <select id="loginCheck" resultType="MemberVO" parameterType="String">
      	select MPASSWORD, MEMAILCHECK from MEMBER where MID = #{MID}
      </select>
      
      <select id="sendEmail" resultType="MemberVO" parameterType="String">
      	select MEMAIL, MEMAILCHECK from MEMBER where MID = #{MID}
      </select>
      
      <update id="updateEmailCode" parameterType="hashmap">
      	update MEMBER set MEMAILCHECK = #{code} where MEMAIL = #{email}
      </update>   
      
      <select id ="findIdEmailCheck" resultType="int">
      	select count(*) from MEMBER where MEMAIL = #{email}
      </select>  
      
      <select id ="findId" resultType="MemberVO" parameterType="String">
      	select MID from MEMBER where MEMAIL = #{email}
      </select> 
      
      <select id ="findPasswordCheck" parameterType="hashmap" resultType="int">
      	select count(*) from MEMBER where MID = #{id} and MEMAIL = #{email} 
      </select> 
      
      <select id ="findPassword" parameterType="hashmap" resultType="MemberVO">
      	select MPASSWORD from MEMBER where MID = #{id} and MEMAIL = #{email} 
      </select> 
      
      <update id="updatePassword" parameterType="hashmap">
      	update MEMBER set MPASSWORD = #{temporaryPass} where MID = #{id} and MEMAIL = #{email} 
      </update> 
      
      <delete id="delete" parameterType="String">
      	DELETE FROM MEMBER WHERE MID = #{id}
      </delete>  
      
      <select id ="findPasswordId" parameterType="String" resultType="MemberVO">
      	select MPASSWORD from MEMBER where MID = #{id}  
      </select> 	
      
       <select id="findBank" resultType="MemberVO" parameterType="String">
      	select BTITLE as MBCODE, MACCOUNT from MEMBER join BANK on BCODE = MBCODE where MID = #{id}
      </select>
      
      <update id="infoUpdate" parameterType="hashmap">
      	update MEMBER set MPASSWORD = #{pwd}, MEMAIL = #{email}, MPHONE = #{phones} where MID = #{id}
      </update> 
      
      <select id="info" resultType="MemberVO" parameterType="String">
      	select DTITLE as MDIVISION, MEMAIL, MADDRESS, MPHONE, BTITLE as MBCODE, MACCOUNT, MREGISTRATION, MJOINDATE from MEMBER join BANK on BCODE = MBCODE join DIVISION on DDIVISION = MDIVISION where MID = #{id}
      </select>
      
      <select id="selectBuyer" resultType="MemberVO" parameterType="String">
      	select MID, MNAME, MEMAIL, BTITLE as MBCODE, MACCOUNT, MREGISTRATION from MEMBER join BANK on BCODE = MBCODE where MID = #{id}
      </select>
      
      <select id="selectAdopt" resultType="MemberVO" parameterType="int">
      	select MID, MNAME, MEMAIL  from MEMBER where MID = (select AAID from ADOPTION_APPLICATION where AANO = #{AANO})
      </select>
      
      <select id = "noticeList" resultType="NoticeVO">
      	<![CDATA[	
      	select NBNUM, NBTITLE from NOTICE_BOARD where ROWNUM <= 5 ORDER BY NBNUM DESC
      	]]>
      </select>
</mapper>
